from django.core.management.base import BaseCommand
from django.utils import timezone
from datetime import timedelta
import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), '../../../journal/ml'))
from train_model import HealthModelTrainer

class Command(BaseCommand):
    help = 'R√©-entra√Æne automatiquement le mod√®le IA chaque mois'
    
    def handle(self, *args, **options):
        self.stdout.write('üîÑ V√©rification de la n√©cessit√© de r√©-entra√Ænement...')
        
        # V√©rifier si le mod√®le a plus d'un mois
        model_path = 'journal/ml/trained_health_model.joblib'
        if os.path.exists(model_path):
            model_age = timezone.now() - timezone.datetime.fromtimestamp(
                os.path.getmtime(model_path)
            )
            
            if model_age < timedelta(days=30):
                self.stdout.write('‚úÖ Mod√®le r√©cent, pas besoin de r√©-entra√Ænement')
                return
        
        # R√©-entra√Ænement n√©cessaire
        self.stdout.write('üîß R√©-entra√Ænement du mod√®le...')
        trainer = HealthModelTrainer()
        mae, r2 = trainer.train_model(use_real_data=True)
        
        if trainer.save_model():
            self.stdout.write(self.style.SUCCESS(
                f'‚úÖ Mod√®le r√©-entra√Æn√© avec succ√®s! MAE: {mae:.2f}, R¬≤: {r2:.2f}'
            ))