# Generated by Django 5.2.7 on 2025-10-26 14:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('journal', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HealthData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('pain_level', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('sleep_duration', models.FloatField(blank=True, help_text='Durée en heures', null=True)),
                ('sleep_quality', models.IntegerField(blank=True, help_text='1 (mauvais) à 5 (excellent)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('steps_count', models.IntegerField(default=0)),
                ('exercise_duration', models.FloatField(default=0, help_text='Durée en minutes')),
                ('activity_type', models.CharField(blank=True, max_length=100)),
                ('medications', models.TextField(blank=True, null=True)),
                ('medication_adherence', models.BooleanField(default=True)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True)),
                ('heart_rate', models.IntegerField(blank=True, null=True)),
                ('weight', models.FloatField(blank=True, help_text='Poids en kg', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_data', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Donnée Santé',
                'verbose_name_plural': 'Données Santé',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='medical_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('analysis_result', models.TextField(blank=True)),
                ('confidence_score', models.FloatField(blank=True, help_text="Score de confiance de l'analyse IA", null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_images', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlyReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(help_text='Premier jour du mois')),
                ('report_content', models.JSONField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('is_finalized', models.BooleanField(default=False)),
                ('health_score', models.FloatField(blank=True, null=True)),
                ('risk_factors', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rapport Mensuel',
                'verbose_name_plural': 'Rapports Mensuels',
                'ordering': ['-month'],
                'unique_together': {('user', 'month')},
            },
        ),
    ]
