"""
========================================
Interpolation (:mod:`scipy.interpolate`)
========================================

.. currentmodule:: scipy.interpolate

<<<<<<< HEAD
Sub-package for functions and objects used in interpolation.

See the :ref:`user guide <tutorial-interpolate>` for recommendations on choosing a
routine, and other usage details.

=======
Sub-package for objects used in interpolation.

As listed below, this sub-package contains spline functions and classes,
1-D and multidimensional (univariate and multivariate)
interpolation classes, Lagrange and Taylor polynomial interpolators, and
wrappers for `FITPACK <http://www.netlib.org/dierckx/>`__
and DFITPACK functions.
>>>>>>> Mental-Health

Univariate interpolation
========================

.. autosummary::
   :toctree: generated/

<<<<<<< HEAD
   make_interp_spline
   CubicSpline
   PchipInterpolator
   Akima1DInterpolator
   FloaterHormannInterpolator
   BarycentricInterpolator
   KroghInterpolator
   CubicHermiteSpline

**Low-level data structures for univariate interpolation:**

.. autosummary::
   :toctree: generated/

   PPoly
   BPoly
   BSpline
=======
   interp1d
   BarycentricInterpolator
   KroghInterpolator
   barycentric_interpolate
   krogh_interpolate
   pchip_interpolate
   CubicHermiteSpline
   PchipInterpolator
   Akima1DInterpolator
   CubicSpline
   PPoly
   BPoly
   FloaterHormannInterpolator
>>>>>>> Mental-Health


Multivariate interpolation
==========================

<<<<<<< HEAD
**Unstructured data**
=======
Unstructured data:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

<<<<<<< HEAD
=======
   griddata
>>>>>>> Mental-Health
   LinearNDInterpolator
   NearestNDInterpolator
   CloughTocher2DInterpolator
   RBFInterpolator
<<<<<<< HEAD

**For data on a grid:**
=======
   Rbf
   interp2d

For data on a grid:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

<<<<<<< HEAD
   RegularGridInterpolator

.. seealso::

    `scipy.ndimage.map_coordinates`,
    :ref:`An example wrapper for map_coordinates <tutorial-interpolate_cartesian-grids>`


**Low-level data structures for tensor product polynomials and splines:**

=======
   interpn
   RegularGridInterpolator
   RectBivariateSpline

.. seealso::

    `scipy.ndimage.map_coordinates`

Tensor product polynomials:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

   NdPPoly
   NdBSpline

<<<<<<< HEAD

1-D spline smoothing and approximation
======================================
=======
1-D Splines
===========
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

<<<<<<< HEAD
   make_lsq_spline
   make_smoothing_spline
   make_splrep
   make_splprep
   generate_knots

Rational Approximation
======================

.. autosummary::
   :toctree: generated/

   AAA


Interfaces to FITPACK routines for 1D and 2D spline fitting
===========================================================

This section lists wrappers for `FITPACK <http://www.netlib.org/dierckx/>`__
functionality for 1D and 2D smoothing splines. In most cases, users are better off
using higher-level routines listed in previous sections.


1D FITPACK splines
------------------

This package provides two sets of functionally equivalent wrappers: object-oriented and
functional.

**Functional FITPACK interface:**

=======
   BSpline
   make_interp_spline
   make_lsq_spline
   make_smoothing_spline
   generate_knots
   make_splrep
   make_splprep

Functional interface to FITPACK routines:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

   splrep
   splprep
   splev
   splint
   sproot
   spalde
   splder
   splantider
   insert

<<<<<<< HEAD
**Object-oriented FITPACK interface:**
=======
Object-oriented FITPACK interface:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

   UnivariateSpline
   InterpolatedUnivariateSpline
   LSQUnivariateSpline


<<<<<<< HEAD
2D FITPACK splines
------------------

**For data on a grid:**
=======

2-D Splines
===========

For data on a grid:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

   RectBivariateSpline
   RectSphereBivariateSpline

<<<<<<< HEAD
**For unstructured data (OOP interface):**
=======
For unstructured data:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

   BivariateSpline
   SmoothBivariateSpline
   SmoothSphereBivariateSpline
   LSQBivariateSpline
   LSQSphereBivariateSpline

<<<<<<< HEAD
**For unstructured data (functional interface):**
=======
Low-level interface to FITPACK functions:
>>>>>>> Mental-Health

.. autosummary::
   :toctree: generated/

   bisplrep
   bisplev

<<<<<<< HEAD
=======
Rational Approximation
======================

.. autosummary::
   :toctree: generated/

   pade
   AAA
>>>>>>> Mental-Health

Additional tools
================

.. autosummary::
   :toctree: generated/

   lagrange
   approximate_taylor_polynomial
<<<<<<< HEAD
   pade

   interpn
   griddata
   barycentric_interpolate
   krogh_interpolate
   pchip_interpolate
   Rbf
   interp1d
   interp2d
=======
>>>>>>> Mental-Health

.. seealso::

   `scipy.ndimage.map_coordinates`,
   `scipy.ndimage.spline_filter`,
<<<<<<< HEAD

"""  # noqa: E501
from ._interpolate import *
from ._fitpack_py import *

=======
   `scipy.signal.resample`,
   `scipy.signal.bspline`,
   `scipy.signal.gauss_spline`,
   `scipy.signal.qspline1d`,
   `scipy.signal.cspline1d`,
   `scipy.signal.qspline1d_eval`,
   `scipy.signal.cspline1d_eval`,
   `scipy.signal.qspline2d`,
   `scipy.signal.cspline2d`.

``pchip`` is an alias of `PchipInterpolator` for backward compatibility
(should not be used in new code).
"""
from ._interpolate import *
from ._fitpack_py import *

# New interface to fitpack library:
>>>>>>> Mental-Health
from ._fitpack2 import *

from ._rbf import Rbf

from ._rbfinterp import *

from ._polyint import *

from ._cubic import *

from ._ndgriddata import *

from ._bsplines import *
from ._fitpack_repro import generate_knots, make_splrep, make_splprep

from ._pade import *

from ._rgi import *

from ._ndbspline import NdBSpline

from ._bary_rational import *

# Deprecated namespaces, to be removed in v2.0.0
from . import fitpack, fitpack2, interpolate, ndgriddata, polyint, rbf, interpnd

__all__ = [s for s in dir() if not s.startswith('_')]

from scipy._lib._testutils import PytestTester
test = PytestTester(__name__)
del PytestTester

# Backward compatibility
pchip = PchipInterpolator
